name: Build binaries

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      matrix:
        os: [ linux, macosx, windows ]
        include:
          - os: linux
            runner: ubuntu-latest
            os-cmake-args: '-DLLVM_BUILD_STATIC=ON -DCMAKE_CXX_FLAGS="-s -flto" -DCMAKE_CXX_COMPILER=g++ -DCMAKE_C_COMPILER=gcc ${POSIX_CMAKE_ARGS}'
            build-args: ''
            extension: ''
            bindir: '/bin'
            shacmd: 'sha512sum'
          - os: macosx
            runner: macos-latest
            os-cmake-args: '-DCMAKE_CXX_FLAGS="-flto" -DCMAKE_OSX_ARCHITECTURES="arm64;x86_64" -DCMAKE_OSX_DEPLOYMENT_TARGET=10.15 ${POSIX_CMAKE_ARGS}'
            build-args: ''
            extension: ''
            bindir: '/bin'
            shacmd: 'shasum -a512'
          - os: windows
            runner: windows-latest
            os-cmake-args: '-Thost=x64 -DLLVM_USE_CRT_MINSIZEREL="MT"'
            build-args: '--config MinSizeRel'
            extension: '.exe'
            bindir: '/MinSizeRel/bin'
            shacmd: 'sha512sum.exe'
    runs-on: ${{ matrix.runner }}
    env:
      COMMON_CMAKE_ARGS: '-DBUILD_SHARED_LIBS=OFF -DLLVM_ENABLE_PROJECTS="clang;clang-tools-extra"'
      POSIX_CMAKE_ARGS: '-DCMAKE_BUILD_TYPE=MinSizeRel'
      LLVM_VERSION: '18.1.4'
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Checkout LLVM repo
      run: |
          git clone -b "llvmorg-${{ env.LLVM_VERSION }}" --depth=1 https://github.com/llvm/llvm-project "llvm"

    - name: Set reusable strings
      # Turn repeated input strings (such as the build output directory) into step outputs. These step outputs can be used throughout the workflow file.
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      run: >
        cmake -S ${{ github.workspace }}/llvm/llvm -B ${{ steps.strings.outputs.build-output-dir }}
        ${{ env.COMMON_CMAKE_ARGS }}
        ${{ matrix.os-cmake-args }}
    
    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} ${{ matrix.build-args }} --parallel
    
    - name: Create and Print sha512sum
      shell: bash
      run: |
        cd ${{ steps.strings.outputs.build-output-dir }}${{ matrix.bindir }}
        ${{ matrix.shacmd }} clang-format${{ matrix.extension }} > clang-format${{ matrix.extension }}.sha512sum
        ${{ matrix.shacmd }} clang-query${{ matrix.extension }} > clang-query${{ matrix.extension }}.sha512sum
        ${{ matrix.shacmd }} clang-tidy${{ matrix.extension }} > clang-tidy${{ matrix.extension }}.sha512sum
        echo "Checksums are: "
        cat clang-format${{ matrix.extension }}.sha512sum
        cat clang-query${{ matrix.extension }}.sha512sum
        cat clang-tidy${{ matrix.extension }}.sha512sum
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: clang-tools-${{ env.LLVM_VERSION }}-${{matrix.os}}
        path: "${{ steps.strings.outputs.build-output-dir }}${{ matrix.bindir }}/clang-*"
        retention-days: 1
        

        